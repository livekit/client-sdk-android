name: Changeset action

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Make PR title
        id: getver
        run: |
          pnpm ci:version
          echo "TITLE=v$(./ci/get_version.sh)" >> "$GITHUB_OUTPUT"
          git restore .
        env:
          # requires repo and read:user access
          GITHUB_TOKEN: ${{ secrets.CHANGESET_GH_TOKEN }}

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          title: ${{ steps.getver.outputs.TITLE }}
          commit: ${{ steps.getver.outputs.TITLE }}
          version: pnpm ci:version
          publish: pnpm ci:publish
        env:
          # requires repo and read:user access
          GITHUB_TOKEN: ${{ secrets.CHANGESET_GH_TOKEN }}
    outputs:
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      hasPublished: ${{ steps.changesets.outputs.published == 'true' }}

  debug-outputs:
    needs: release
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: "echo outputs"
        run: |
          echo ${{ needs.release.outputs.publishedPackages }}
          echo ${{ needs.release.outputs.hasPublished }}

  publish:
    needs: release
    name: Publish To Maven
    if: ${{ needs.release.outputs.hasPublished == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client-sdk-android
    steps:
      - name: checkout client-sdk-android
        uses: actions/checkout@v4.0.0
        with:
          path: ./client-sdk-android
          submodules: recursive

      - name: set up JDK 17
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build docs
        run: ./gradlew dokkaHtml

      - name: Upload to S3
        run: aws s3 cp ./livekit-android-sdk/build/dokka/html/ s3://livekit-docs/client-sdk-android/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_DEPLOY_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_DEPLOY_AWS_API_SECRET }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: Build with Gradle
        run: ./gradlew livekit-android-sdk:assembleRelease livekit-android-camerax:assembleRelease livekit-android-test:testRelease

      - name: Create gpg key and import into gradle properties
        run: |
          echo $GPG_KEY_ARMOR | base64 --decode > ./release.asc
          gpg --quiet --output $GITHUB_WORKSPACE/release.gpg --dearmor ./release.asc
          sed -i -e "s,nexusUsername=,nexusUsername=$NEXUS_USERNAME,g" gradle.properties
          sed -i -e "s,nexusPassword=,nexusPassword=$NEXUS_PASSWORD,g" gradle.properties
          sed -i -e "s,signing.keyId=,signing.keyId=$GPG_KEY_ID,g" gradle.properties
          sed -i -e "s,signing.password=,signing.password=$GPG_PASSWORD,g" gradle.properties
          sed -i -e "s,signing.secretKeyRingFile=,signing.secretKeyRingFile=$GITHUB_WORKSPACE/release.gpg,g" gradle.properties
          sed -i -e "s,STAGING_PROFILE_ID=,STAGING_PROFILE_ID=$PROFILE_ID,g" gradle.properties
        env:
          GPG_KEY_ARMOR: "${{ secrets.SIGNING_KEY_ARMOR }}"
          GPG_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          GPG_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          PROFILE_ID: ${{ secrets.STAGING_PROFILE_ID }}

      - name: Publish to sonatype
        run: ./gradlew publishReleasePublicationToMavenRepository closeAndReleaseMavenStagingRepository -Dorg.gradle.parallel=false

  update-snapshot:
    needs: release
    name: Update SNAPSHOT
    if: ${{ needs.release.outputs.hasPublished == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Update snapshot
        id: update
        run: echo "SNAPSHOT_VERSION=$(./ci/update_snapshot_version.sh)" >> "$GITHUB_OUTPUT"

      - name: Log version
        env:
          SNAPSHOT_VERSION: ${{ steps.update.outputs.SNAPSHOT_VERSION }}
        run: echo $SNAPSHOT_VERSION

      - name: Create Update SNAPSHOT Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.CHANGESET_GH_TOKEN }}
          branch: dl/update_snapshot_ver
          title: Prepare snapshot version ${{ steps.update.outputs.SNAPSHOT_VERSION }}
          commit-message: Prepare snapshot version ${{ steps.update.outputs.SNAPSHOT_VERSION }}
